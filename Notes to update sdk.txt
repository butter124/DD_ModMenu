To find out how i made the sdk dll generator refer to this site https://www.unknowncheats.me/forum/unreal-engine-3-a/71911-thefeckless-ue3-sdk-generator.html

SdkHeaders.h
replace the top of this file with the below code

#include <Psapi.h>
#include "HelperFunctions.h"

MODULEINFO miGame = GetModuleInfo(NULL);
// UE3 Tables Sigs
#define GObjects_Pattern		"\x8b\x00\x00\x00\x00\x00\x8b\x04\x00\x8b\x40\x00\x25\x00\x02\x00\x00"
#define GObjects_Mask			"x?????xx?xx?xxxxx"
#define GObjects_Offset			0x2

#define GNames_Pattern			"\x8b\x0d\x00\x00\x00\x00\x83\x3c\x81\x00\x74"
#define GNames_Mask				"xx????xxxxx"
#define GNames_Offset			0x2


//#define GObjects			0x0
//#define GNames			0x0

//
DWORD GObjects = *(unsigned long*)(FindPattern((unsigned long)miGame.lpBaseOfDll, miGame.SizeOfImage, (unsigned char*)GObjects_Pattern, (char*)GObjects_Mask) + GObjects_Offset);
//
//
//
DWORD GNames = *(unsigned long*)(FindPattern((unsigned long)miGame.lpBaseOfDll, miGame.SizeOfImage, (unsigned char*)GNames_Pattern, (char*)GNames_Mask) + GNames_Offset);
//


Core_classes.h
comment out VfTableObject


Core_functions.h
add below line to the top of the file
#include <string>

replace GetFullName with
char* UObject::GetFullName() 
{ 
	if ( this->Class && this->Outer ) 
	{ 
		static char cOutBuffer[ 512 ]; 
		std::string t;
		if ( this->Outer->Outer ) 
		{
			//strcpy_s ( cOutBuffer, this->Class->GetName() ); 
			//strcat_s ( cOutBuffer, " " ); 
			t += this->Class->GetName();
			t += " ";

			//strcat_s ( cOutBuffer, this->Outer->Outer->GetName() ); 
			//strcat_s ( cOutBuffer, "." ); 
			t += this->Outer->Outer->GetName();
			t += ".";

			//strcat_s ( cOutBuffer, this->Outer->GetName() ); 
			//strcat_s ( cOutBuffer, "." ); 
			t += this->Outer->GetName();
			t += ".";

			//strcat_s ( cOutBuffer, this->GetName() ); 
			t += this->GetName();

			if(t.find("þ") != std::string::npos)
				return (char*)"(null)";
			strcpy_s(cOutBuffer, t.c_str());
		} 
		else 
		{ 
			//strcpy_s ( cOutBuffer, this->Class->GetName() ); 
			//strcat_s ( cOutBuffer, " " ); 
			t += this->Class->GetName();
			t += " ";

			//strcat_s ( cOutBuffer, this->Outer->GetName() ); 
			//strcat_s ( cOutBuffer, "." ); 
			t += this->Outer->GetName();
			t += ".";

			//strcat_s ( cOutBuffer, this->GetName() ); 
			t += this->GetName();

			if(t.find("þ") != std::string::npos)
				return (char*)"(null)";

			strcpy_s(cOutBuffer, t.c_str());
		} 

		return cOutBuffer; 
	} 

	return (char*)"(null)"; 
}

